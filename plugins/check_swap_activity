#!/bin/bash

# This script checks swap space activity on the machine it is run on. It outputs the 
# mumber of bytes moved from physical to swap space in the last DURATION seconds.
#
# Usage: "check_swap_activity -d DURATION(INTEGER) -w WARNING(INTEGER) -c CRITICAL(INTEGER)"
#
# Returns the nagios native status codes:
#
# Nagios Status
#
# 0 = OK (SWAP usage below WARNING) 1 = WARNING (SWAP usage between
# WARNING AND CRITICAL) 2 = CRITICAL (SWAP usage higher than CRITICAL) 3
# = UNKNOWN (Wrong usage)
#
# Tested on:
# - Ubuntu 12.04
#
# Copyright 2012 Shu Wei Tan (webblazers@yahoo.com)
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
# 
# Change History:
# 10/05/2012 - Version 1.0 - Shu Wei Tan (webblazers@yahoo.com)
# 06/03/2014 - Version 1.1 - Ivan Ferreira (ivan.ferreira@gmail.com)
#    - Use of page in and page out as indicator of paging
#
## USAGE MESSAGE
usage() { 
cat << EOF
usage: $0 options

This script runs a swap space activity test on the machine.

OPTIONS:
   -h Show this message
   -d Duration in seconds to monitor for swap activity (not optional)
   -w Warning 0 | 1 (not optional)
      1: Alert as Warning instead of Critical
   -c Critical 0 | 1 (not optional)
      1: Alert as Critical instead of Warning

EOF
}

SWAP_WARN=
SWAP_CRIT=
TMPFILE=/var/tmp/check_swap_activity.log
## FETCH ARGUMENTS
while getopts "hd:w:c:" OPTION; do
        case "${OPTION}" in
                h)
                        usage
                        exit 3
                        ;;
		d)
			DURATION=${OPTARG}
			;;
                w)
                        SWAP_WARN=${OPTARG}
                        ;;
                c)
                        SWAP_CRIT=${OPTARG}
                        ;;
                ?)
                        usage
                        exit 3
                        ;;
        esac
done

## CHECK ARGUMENTS
if [ -z ${DURATION} ] ||  [ -z ${SWAP_WARN} ] || [ -z ${SWAP_CRIT} ] ; then
        usage
        exit 3
fi

## GET SWAP INFO FROM MACHINE
vmstat ${DURATION} 2 | tail -n 1 > $TMPFILE  2>&1
case $(uname) in
HP-UX)
  # El vmstat en HP-UX tiene en columna 8 y 9 la informacion de paginado
  SWAPIN_ACTIVITY=$(awk '{print $8}' $TMPFILE)
  SWAPOUT_ACTIVITY=$(awk '{print $9}' $TMPFILE)
  ;;
Linux)
  # El vmstat en Linux tiene en columna 7 y 8 la informacion de paginado
  SWAPIN_ACTIVITY=$(awk '{print $7}' $TMPFILE)
  SWAPOUT_ACTIVITY=$(awk '{print $8}' $TMPFILE)
  ;;
*)
  echo "Error! Unknown Operating System"
  ;;
esac


## CHECK SWAPPING ON MACHINE
if [ ${SWAPIN_ACTIVITY} -ne 0 ] && [ ${SWAPOUT_ACTIVITY} -ne 0 ]; then
  SWAP_RATIO=$(echo ${SWAPIN_ACTIVITY} /  ${SWAPOUT_ACTIVITY} | bc )
  if [ ${SWAP_WARN} -eq 1 ]; then
          LINE="WARNING! Swap activity in last ${DURATION} second(s): pi: ${SWAPIN_ACTIVITY} po:${SWAPOUT_ACTIVITY} | swap_ratio=${SWAP_RATIO};${SWAP_WARN};${SWAP_CRIT};0;1"
          echo $LINE
	  exit 1
  elif [ ${SWAP_CRIT} -eq 1 ]; then
	  ## SWAP IS IN CRITICAL STATE
          LINE="CRITICAL! Swap activity in last ${DURATION} second(s): pi: ${SWAPIN_ACTIVITY} po:${SWAPOUT_ACTIVITY} | swap_ratio=${SWAP_RATIO};${SWAP_WARN};${SWAP_CRIT};0;1"
          echo $LINE
          exit 2
  fi
else
        LINE="OK! Swap activity in last ${DURATION} second(s): pi: ${SWAPIN_ACTIVITY} po:${SWAPOUT_ACTIVITY} | swap_ratio=${SWAP_RATIO};${SWAP_WARN};${SWAP_CRIT};0;1"
          echo $LINE
	  exit 0
fi
